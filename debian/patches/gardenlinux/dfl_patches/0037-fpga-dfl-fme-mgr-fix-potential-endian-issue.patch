From 7ad50c7a7f6c586016dcb0576bee2bac5856f656 Mon Sep 17 00:00:00 2001
From: Xu Yilun <yilun.xu@intel.com>
Date: Fri, 18 Jun 2021 15:58:24 +0800
Subject: [PATCH] fpga: dfl: fme-mgr: fix potential endian issue

The PR engine pushes 32 bit PR data to FPGA in one batch. But it
requires host to issue a 64bit write to FME_PR_DATA register, with all
upper 32 bits being 0.

So the driver needs to expand each 32 bit data to 64 bit then write to
hardware. During the process the byte will be swapped in big endian
systems.

This patch uses memcpy() and __raw_writeX() calls, which ensure no byte
swap during the process.

Signed-off-by: Xu Yilun <yilun.xu@intel.com>
---
 drivers/fpga/dfl-fme-mgr.c | 20 +++++++++++++++-----
 1 file changed, 15 insertions(+), 5 deletions(-)

diff --git a/drivers/fpga/dfl-fme-mgr.c b/drivers/fpga/dfl-fme-mgr.c
index af0785783b52..65bac16e4bd8 100644
--- a/drivers/fpga/dfl-fme-mgr.c
+++ b/drivers/fpga/dfl-fme-mgr.c
@@ -162,6 +162,16 @@ static int fme_mgr_write_init(struct fpga_manager *mgr,
 	return 0;
 }
 
+static inline void pr_data_write(u64 val, void __iomem *addr)
+{
+#ifdef CONFIG_64BIT
+	__raw_writeq(val, addr);
+#else
+	__raw_writel(val >> 32, addr + 4);
+	__raw_writel(val, addr);
+#endif
+}
+
 static int fme_mgr_write(struct fpga_manager *mgr,
 			 const char *buf, size_t count)
 {
@@ -169,7 +179,7 @@ static int fme_mgr_write(struct fpga_manager *mgr,
 	struct fme_mgr_priv *priv = mgr->priv;
 	void __iomem *fme_pr = priv->ioaddr;
 	u64 pr_ctrl, pr_status, pr_data;
-	int delay = 0, pr_credit, i = 0;
+	int delay = 0, pr_credit;
 
 	dev_dbg(dev, "start request\n");
 
@@ -206,12 +216,12 @@ static int fme_mgr_write(struct fpga_manager *mgr,
 		}
 
 		pr_data = 0;
-		pr_data |= FIELD_PREP(FME_PR_DATA_PR_DATA_RAW,
-				      *(((u32 *)buf) + i));
-		writeq(pr_data, fme_pr + FME_PR_DATA);
+		memcpy(&pr_data, buf, 4);
+		pr_data_write(pr_data, fme_pr + FME_PR_DATA);
+
+		buf += 4;
 		count -= 4;
 		pr_credit--;
-		i++;
 	}
 
 	return 0;
