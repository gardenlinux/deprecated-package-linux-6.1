From fd174816790f92cb7f34e4acb0d7a8bd47f854a7 Mon Sep 17 00:00:00 2001
From: Russ Weight <russell.h.weight@intel.com>
Date: Mon, 22 Aug 2022 16:57:11 -0700
Subject: [PATCH] fpga: m10bmc-sec: Support SDM SR/PR cancellation
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Add new image-load triggers to support SDM SR and PR cancellation. Add
sdm_sr_cancel_status amd sdm_pr_cancel_status sysfs nodes to the security
directory to provide status on SDM key cancellation.

Co-developed-by: Russ Weight <russell.h.weight@intel.com>
Signed-off-by: Russ Weight <russell.h.weight@intel.com>
Signed-off-by: Ilpo JÃ¤rvinen <ilpo.jarvinen@linux.intel.com>
---
 .../sysfs-driver-intel-m10-bmc-sec-update     | 16 +++++
 drivers/fpga/intel-m10-bmc-sec-update.c       | 66 ++++++++++++++++++-
 include/linux/mfd/intel-m10-bmc.h             |  8 +++
 3 files changed, 89 insertions(+), 1 deletion(-)

diff --git a/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-sec-update b/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-sec-update
index a35440276639..0872d80bb1ee 100644
--- a/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-sec-update
+++ b/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-sec-update
@@ -76,6 +76,22 @@ Description:	Read-only. Read this file to determine the status of SDM
 		partial reconfiguration key provisioning.
 		Format: "0x%x".
 
+What:		/sys/bus/platform/drivers/intel-m10bmc-sec-update/.../security/sdm_sr_cancel_status
+Date:		Dec 2022
+KernelVersion:  6.1
+Contact:	Russ Weight <russell.h.weight@intel.com>
+Description:	Read-only. Read this file to determine the status of SDM
+		static region key cancellation.
+		Format: "0x%x".
+
+What:		/sys/bus/platform/drivers/intel-m10bmc-sec-update/.../security/sdm_pr_cancel_status
+Date:		Dec 2022
+KernelVersion:  6.1
+Contact:	Russ Weight <russell.h.weight@intel.com>
+Description:	Read-only. Read this file to determine the status of SDM
+		partial reconfiguration key cancellation.
+		Format: "0x%x".
+
 What:		/sys/bus/platform/drivers/intel-m10bmc-sec-update/.../control/available_images
 Date:		Nov 2021
 KernelVersion:  5.16
diff --git a/drivers/fpga/intel-m10-bmc-sec-update.c b/drivers/fpga/intel-m10-bmc-sec-update.c
index 2b65a7b0a655..1471b9c3194d 100644
--- a/drivers/fpga/intel-m10-bmc-sec-update.c
+++ b/drivers/fpga/intel-m10-bmc-sec-update.c
@@ -186,6 +186,15 @@ static int pmci_sec_sdm_sr_image_load(struct m10bmc_sec *sec)
 				  PMCI_SDM_SR_IMG_REQ, PMCI_SDM_SR_IMG_REQ);
 }
 
+static int pmci_sec_sdm_sr_cancel(struct m10bmc_sec *sec)
+{
+	const struct m10bmc_csr_map *csr_map = sec->m10bmc->info->csr_map;
+
+	return regmap_update_bits(sec->m10bmc->regmap,
+				  csr_map->base + M10BMC_PMCI_SDM_SR_CNCL_CTRL_STS,
+				  PMCI_SDM_SR_CNCL_REQ, PMCI_SDM_SR_CNCL_REQ);
+}
+
 static int pmci_sec_sdm_pr_image_load(struct m10bmc_sec *sec)
 {
 	const struct m10bmc_csr_map *csr_map = sec->m10bmc->info->csr_map;
@@ -195,6 +204,15 @@ static int pmci_sec_sdm_pr_image_load(struct m10bmc_sec *sec)
 				  PMCI_SDM_PR_IMG_REQ, PMCI_SDM_PR_IMG_REQ);
 }
 
+static int pmci_sec_sdm_pr_cancel(struct m10bmc_sec *sec)
+{
+	const struct m10bmc_csr_map *csr_map = sec->m10bmc->info->csr_map;
+
+	return regmap_update_bits(sec->m10bmc->regmap,
+				  csr_map->base + M10BMC_PMCI_SDM_PR_CNCL_CTRL_STS,
+				  PMCI_SDM_PR_CNCL_REQ, PMCI_SDM_PR_CNCL_REQ);
+}
+
 static int m10bmc_sec_bmc_image_load_0(struct m10bmc_sec *sec)
 {
 	return m10bmc_sec_bmc_image_load(sec, 0);
@@ -431,10 +449,18 @@ static struct image_load n6000_image_load_hndlrs[] = {
 		.name = "sdm_sr",
 		.load_image = pmci_sec_sdm_sr_image_load,
 	},
+	{
+		.name = "sdm_sr_cancel",
+		.load_image = pmci_sec_sdm_sr_cancel,
+	},
 	{
 		.name = "sdm_pr",
 		.load_image = pmci_sec_sdm_pr_image_load,
 	},
+	{
+		.name = "sdm_pr_cancel",
+		.load_image = pmci_sec_sdm_pr_cancel,
+	},
 	{}
 };
 
@@ -662,6 +688,23 @@ static ssize_t sdm_sr_provision_status_show(struct device *dev,
 }
 static DEVICE_ATTR_RO(sdm_sr_provision_status);
 
+static ssize_t sdm_sr_cancel_status_show(struct device *dev,
+					 struct device_attribute *attr, char *buf)
+{
+	struct m10bmc_sec *sec = dev_get_drvdata(dev);
+	const struct m10bmc_csr_map *csr_map = sec->m10bmc->info->csr_map;
+	u32 status;
+	int ret;
+
+	ret = m10bmc_sys_read(sec->m10bmc,
+			      csr_map->base + M10BMC_PMCI_SDM_SR_CNCL_CTRL_STS, &status);
+	if (ret)
+		return ret;
+
+	return sysfs_emit(buf, "0x%x\n", (unsigned int)FIELD_GET(PMCI_SDM_SR_CNCL_ERROR, status));
+}
+static DEVICE_ATTR_RO(sdm_sr_cancel_status);
+
 static ssize_t sdm_pr_provision_status_show(struct device *dev,
 					    struct device_attribute *attr, char *buf)
 {
@@ -678,6 +721,23 @@ static ssize_t sdm_pr_provision_status_show(struct device *dev,
 }
 static DEVICE_ATTR_RO(sdm_pr_provision_status);
 
+static ssize_t sdm_pr_cancel_status_show(struct device *dev,
+					 struct device_attribute *attr, char *buf)
+{
+	struct m10bmc_sec *sec = dev_get_drvdata(dev);
+	const struct m10bmc_csr_map *csr_map = sec->m10bmc->info->csr_map;
+	u32 status;
+	int ret;
+
+	ret = m10bmc_sys_read(sec->m10bmc,
+			      csr_map->base + M10BMC_PMCI_SDM_PR_CNCL_CTRL_STS, &status);
+	if (ret)
+		return ret;
+
+	return sysfs_emit(buf, "0x%x\n", (unsigned int)FIELD_GET(PMCI_SDM_PR_CNCL_ERROR, status));
+}
+static DEVICE_ATTR_RO(sdm_pr_cancel_status);
+
 static umode_t
 m10bmc_security_is_visible(struct kobject *kobj, struct attribute *attr, int n)
 {
@@ -685,7 +745,9 @@ m10bmc_security_is_visible(struct kobject *kobj, struct attribute *attr, int n)
 
 	if (!sec->ops->sec_visible &&
 	    (attr == &dev_attr_sdm_sr_provision_status.attr ||
-	     attr == &dev_attr_sdm_pr_provision_status.attr))
+	     attr == &dev_attr_sdm_sr_cancel_status.attr ||
+	     attr == &dev_attr_sdm_pr_provision_status.attr ||
+	     attr == &dev_attr_sdm_pr_cancel_status.attr))
 		return 0;
 
 	return attr->mode;
@@ -700,7 +762,9 @@ static struct attribute *m10bmc_security_attrs[] = {
 	&dev_attr_pr_canceled_csks.attr,
 	&dev_attr_bmc_canceled_csks.attr,
 	&dev_attr_sdm_sr_provision_status.attr,
+	&dev_attr_sdm_sr_cancel_status.attr,
 	&dev_attr_sdm_pr_provision_status.attr,
+	&dev_attr_sdm_pr_cancel_status.attr,
 	NULL,
 };
 
diff --git a/include/linux/mfd/intel-m10-bmc.h b/include/linux/mfd/intel-m10-bmc.h
index f7250b4494df..ddc04d71ca74 100644
--- a/include/linux/mfd/intel-m10-bmc.h
+++ b/include/linux/mfd/intel-m10-bmc.h
@@ -232,6 +232,14 @@
 #define PMCI_SDM_PR_IMG_REQ			BIT(0)
 #define PMCI_SDM_PR_PGM_ERROR			GENMASK(23, 16)
 
+#define M10BMC_PMCI_SDM_SR_CNCL_CTRL_STS	0x23c
+#define PMCI_SDM_SR_CNCL_REQ			BIT(0)
+#define PMCI_SDM_SR_CNCL_ERROR			GENMASK(18, 8)
+
+#define M10BMC_PMCI_SDM_PR_CNCL_CTRL_STS	0x240
+#define PMCI_SDM_PR_CNCL_REQ			BIT(0)
+#define PMCI_SDM_PR_CNCL_ERROR			GENMASK(18, 8)
+
 #define M10BMC_PMCI_SDM_PR_STS			0x820
 #define M10BMC_PMCI_CERT_PROG_STS		0x824
 #define M10BMC_PMCI_CERT_SPEC_STS		0x828
