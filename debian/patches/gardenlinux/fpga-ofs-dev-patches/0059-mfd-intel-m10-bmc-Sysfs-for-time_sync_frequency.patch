From 4b91c2a0a1891c638ff08a5af029c7f63e4866a5 Mon Sep 17 00:00:00 2001
From: Russ Weight <russell.h.weight@intel.com>
Date: Mon, 1 Mar 2021 14:21:51 -0800
Subject: [PATCH 59/93] mfd: intel-m10-bmc: Sysfs for time_sync_frequency

Add a sysfs node, time_sync_frequency to, to allow the frequency of
timestamp synchronization with the BMC to be modified from the
default of 60 seconds.

Signed-off-by: Russ Weight <russell.h.weight@intel.com>
---
 .../testing/sysfs-driver-intel-m10-bmc-log    | 12 ++++++
 drivers/mfd/intel-m10-bmc-log.c               | 40 +++++++++++++++++++
 2 files changed, 52 insertions(+)
 create mode 100644 Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log

diff --git a/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log b/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log
new file mode 100644
index 000000000000..a8bce775f8ed
--- /dev/null
+++ b/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log
@@ -0,0 +1,12 @@
+What: /sys/bus/platform/devices/intel-m10-bmc-log.*.auto/time_sync_frequency
+Date:		Mar 2021
+KernelVersion:	5.12
+Contact:	Russ Weight <russell.h.weight@intel.com>
+Description:	Read/write. This sysfs node controls the frequency (in
+		seconds) that the host writes to the MAX10 BMC registers
+		to synchronize the timestamp registers used for the BMC
+		error log. Write zero to stop the timestamp synchronization.
+		Write a non-zero integer value to restart or modify the
+		update frequency. Reading from this file will return the
+		same integer value.
+		Format: "%u".
diff --git a/drivers/mfd/intel-m10-bmc-log.c b/drivers/mfd/intel-m10-bmc-log.c
index 53ffeb6083ac..70c9381b4cf8 100644
--- a/drivers/mfd/intel-m10-bmc-log.c
+++ b/drivers/mfd/intel-m10-bmc-log.c
@@ -48,6 +48,42 @@ static void m10bmc_log_time_sync(struct work_struct *work)
 	schedule_delayed_work(&log->dwork, log->freq_s * HZ);
 }
 
+static ssize_t
+time_sync_frequency_store(struct device *dev, struct device_attribute *attr,
+			  const char *buf, size_t count)
+{
+	struct m10bmc_log *ddata = dev_get_drvdata(dev);
+	unsigned int ret, old_freq = ddata->freq_s;
+
+	ret = kstrtouint(buf, 0, &ddata->freq_s);
+	if (ret)
+		return ret;
+
+	if (old_freq)
+		cancel_delayed_work_sync(&ddata->dwork);
+
+	if (ddata->freq_s)
+		m10bmc_log_time_sync(&ddata->dwork.work);
+
+	return count;
+}
+
+static ssize_t
+time_sync_frequency_show(struct device *dev, struct device_attribute *attr,
+			 char *buf)
+{
+	struct m10bmc_log *ddata = dev_get_drvdata(dev);
+
+	return sysfs_emit(buf, "%u\n", ddata->freq_s);
+}
+static DEVICE_ATTR_RW(time_sync_frequency);
+
+static struct attribute *m10bmc_log_attrs[] = {
+	&dev_attr_time_sync_frequency.attr,
+	NULL,
+};
+ATTRIBUTE_GROUPS(m10bmc_log);
+
 static int m10bmc_log_probe(struct platform_device *pdev)
 {
 	struct m10bmc_log *ddata;
@@ -78,6 +114,10 @@ static int m10bmc_log_remove(struct platform_device *pdev)
 static struct platform_driver intel_m10bmc_log_driver = {
 	.probe = m10bmc_log_probe,
 	.remove = m10bmc_log_remove,
+	.driver = {
+		.name = "n6000bmc-log",
+		.dev_groups = m10bmc_log_groups,
+	},
 };
 module_platform_driver(intel_m10bmc_log_driver);
 
-- 
2.39.0

