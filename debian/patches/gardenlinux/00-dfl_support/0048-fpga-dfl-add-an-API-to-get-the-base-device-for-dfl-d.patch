From 3203422169216ed8003fa64923e61e51796b0042 Mon Sep 17 00:00:00 2001
From: Xu Yilun <yilun.xu@intel.com>
Date: Tue, 21 Apr 2020 22:51:00 +0800
Subject: [PATCH] fpga: dfl: add an API to get the base device for dfl device

This patch adds an API for dfl devices to find which physical device
owns the DFL.

This patch makes preparation for supporting DFL Ether Group private
feature driver. It uses this information to determine which retimer
device physically connects to which ether group.

Signed-off-by: Xu Yilun <yilun.xu@intel.com>
Reviewed-by: Matthew Gerlach <matthew.gerlach@linux.intel.com>
----
v2: change commit msg according to Matthew's suggestion.
v3: no change.
---
 drivers/fpga/dfl.c  | 9 +++++++++
 include/linux/dfl.h | 2 ++
 2 files changed, 11 insertions(+)

diff --git a/drivers/fpga/dfl.c b/drivers/fpga/dfl.c
index 00dc293ac087..fbd923efe378 100644
--- a/drivers/fpga/dfl.c
+++ b/drivers/fpga/dfl.c
@@ -509,6 +509,15 @@ void dfl_driver_unregister(struct dfl_driver *dfl_drv)
 }
 EXPORT_SYMBOL(dfl_driver_unregister);
 
+struct device *dfl_dev_get_base_dev(struct dfl_device *dfl_dev)
+{
+	if (!dfl_dev || !dfl_dev->cdev)
+		return NULL;
+
+	return dfl_dev->cdev->parent;
+}
+EXPORT_SYMBOL_GPL(dfl_dev_get_base_dev);
+
 #define is_header_feature(feature) ((feature)->id == FEATURE_ID_FIU_HEADER)
 
 /**
diff --git a/include/linux/dfl.h b/include/linux/dfl.h
index a62449b70708..f230befc9efe 100644
--- a/include/linux/dfl.h
+++ b/include/linux/dfl.h
@@ -75,6 +75,8 @@ struct dfl_driver {
 #define to_dfl_dev(d) container_of(d, struct dfl_device, dev)
 #define to_dfl_drv(d) container_of(d, struct dfl_driver, drv)
 
+struct device *dfl_dev_get_base_dev(struct dfl_device *dfl_dev);
+
 /*
  * use a macro to avoid include chaining to get THIS_MODULE.
  */
