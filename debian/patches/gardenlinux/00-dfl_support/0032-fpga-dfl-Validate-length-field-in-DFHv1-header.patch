From 5c13577ed84872fba142981fa7c7ac9cf7b13b56 Mon Sep 17 00:00:00 2001
From: Matthew Gerlach <matthew.gerlach@linux.intel.com>
Date: Mon, 30 Jan 2023 14:42:22 -0800
Subject: [PATCH] fpga: dfl: Validate length field in DFHv1 header

For relative addressing of the feature registers, validate
the length field in the DFHv1.

Signed-off-by: Matthew Gerlach <matthew.gerlach@linux.intel.com>
---
 drivers/fpga/dfl.c | 13 +++++++++++--
 1 file changed, 11 insertions(+), 2 deletions(-)

diff --git a/drivers/fpga/dfl.c b/drivers/fpga/dfl.c
index 304b9c105690..0135cca3d513 100644
--- a/drivers/fpga/dfl.c
+++ b/drivers/fpga/dfl.c
@@ -1182,6 +1182,7 @@ create_feature_instance(struct build_feature_devs_info *binfo,
 	u8 revision = 0;
 	u64 v, addr_off;
 	u8 dfh_ver = 0;
+	bool rel_addr;
 	int ret;
 
 	if (fid != FEATURE_ID_AFU) {
@@ -1220,13 +1221,21 @@ create_feature_instance(struct build_feature_devs_info *binfo,
 	if (dfh_ver == 1) {
 		v = readq(binfo->ioaddr + ofst + DFHv1_CSR_ADDR);
 		addr_off = FIELD_GET(DFHv1_CSR_ADDR_MASK, v);
-		if (FIELD_GET(DFHv1_CSR_ADDR_REL, v))
+		if (FIELD_GET(DFHv1_CSR_ADDR_REL, v)) {
 			start = addr_off << 1;
-		else
+			rel_addr = false;
+		} else {
 			start = binfo->start + ofst + addr_off;
+			rel_addr = true;
+		}
 
 		v = readq(binfo->ioaddr + ofst + DFHv1_CSR_SIZE_GRP);
 		end = start + FIELD_GET(DFHv1_CSR_SIZE_GRP_SIZE, v) - 1;
+		if (rel_addr && (end > (binfo->start + ofst) + size)) {
+			kfree(finfo);
+			dev_warn(binfo->dev, "Invalid DFHv1 length at 0x%llx\n", ofst);
+			return 0;
+		}
 	} else {
 		start = binfo->start + ofst;
 		end = start + size - 1;
