From db543acb471c5054f394cd0b7d8e86ab935906f9 Mon Sep 17 00:00:00 2001
From: Tianfei zhang <tianfei.zhang@intel.com>
Date: Wed, 31 Mar 2021 08:37:44 -0400
Subject: [PATCH 60/93] mfd: intel-m10-bmc: expose bmc event log via nvmem

Use the nvmem API to expose the event MAX10 BMC event logs to userspace.

Signed-off-by: Tianfei Zhang <tianfei.zhang@intel.com>
Signed-off-by: Matthew Gerlach <matthew.gerlach@linux.intel.com>
---
 .../testing/sysfs-driver-intel-m10-bmc-log    | 24 +++++
 drivers/mfd/intel-m10-bmc-log.c               | 99 +++++++++++++++++++
 include/linux/mfd/intel-m10-bmc.h             |  9 ++
 3 files changed, 132 insertions(+)

diff --git a/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log b/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log
index a8bce775f8ed..48f90de64af6 100644
--- a/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log
+++ b/Documentation/ABI/testing/sysfs-driver-intel-m10-bmc-log
@@ -10,3 +10,27 @@ Description:	Read/write. This sysfs node controls the frequency (in
 		update frequency. Reading from this file will return the
 		same integer value.
 		Format: "%u".
+
+What:		/sys/bus/platform/devices/intel-m10-bmc-log.*.auto/bmc_event_log*/nvmem
+Date:		Oct 2021
+KernelVersion:  5.15
+Contact:	Tianfei zhang <tianfei.zhang@intel.com>
+Description:	Read-only. This file returns the contents of the "error log"
+		partition in flash. This partition includes the error info for
+		the BMC.
+
+What:		/sys/bus/platform/devices/intel-m10-bmc-log.*.auto/fpga_image_directory*/nvmem
+Date:		Oct 2021
+KernelVersion:  5.15
+Contact:	Tianfei zhang <tianfei.zhang@intel.com>
+Description:	Read-only. This file returns the contents of the "FPGA image
+		directory" partition in flash. This partition includes
+		information like the FPGA Image versions and state.
+
+What:		/sys/bus/platform/devices/intel-m10-bmc-log.*.auto/bom_info*/nvmem
+Date:		Oct 2021
+KernelVersion:  5.15
+Contact:	Tianfei zhang <tianfei.zhang@intel.com>
+Description:	Read-only. This file returns the contents of the "BOM info"
+		partition in flash. This partition includes information such
+		as the BOM critical components, PBA#, MMID.
diff --git a/drivers/mfd/intel-m10-bmc-log.c b/drivers/mfd/intel-m10-bmc-log.c
index 70c9381b4cf8..a07ecc646b53 100644
--- a/drivers/mfd/intel-m10-bmc-log.c
+++ b/drivers/mfd/intel-m10-bmc-log.c
@@ -10,12 +10,17 @@
 #include <linux/mfd/intel-m10-bmc.h>
 #include <linux/module.h>
 #include <linux/platform_device.h>
+#include <linux/nvmem-provider.h>
+#include <linux/mod_devicetable.h>
 
 struct m10bmc_log {
 	struct device *dev;
 	struct intel_m10bmc *m10bmc;
 	unsigned int freq_s;		/* update frequency in seconds */
 	struct delayed_work dwork;
+	struct nvmem_device *bmc_event_log_nvmem;
+	struct nvmem_device *fpga_image_dir_nvmem;
+	struct nvmem_device *bom_info_nvmem;
 };
 
 #define M10BMC_TIMESTAMP_FREQ   60	/* 60 seconds between updates */
@@ -84,9 +89,79 @@ static struct attribute *m10bmc_log_attrs[] = {
 };
 ATTRIBUTE_GROUPS(m10bmc_log);
 
+static int bmc_nvmem_read(struct m10bmc_log *ddata, unsigned int addr,
+			  unsigned int off, void *val, size_t count)
+{
+	int ret;
+
+	if (!ddata->m10bmc->ops.flash_read)
+		return -ENODEV;
+
+	ret = ddata->m10bmc->ops.flash_read(ddata->m10bmc, val,
+					    addr + off, count);
+	if (ret) {
+		dev_err(ddata->dev, "failed to read flash %x\n", addr);
+		return -EIO;
+	}
+
+	return 0;
+}
+
+static int bmc_event_log_nvmem_read(void *priv, unsigned int off,
+				    void *val, size_t count)
+{
+	struct m10bmc_log *ddata = priv;
+
+	return bmc_nvmem_read(ddata, PMCI_ERROR_LOG_ADDR, off, val, count);
+}
+
+static int fpga_image_dir_nvmem_read(void *priv, unsigned int off,
+				     void *val, size_t count)
+{
+	struct m10bmc_log *ddata = priv;
+
+	return bmc_nvmem_read(ddata, PMCI_FPGA_IMAGE_DIR_ADDR, off, val, count);
+}
+
+static int bom_info_nvmem_read(void *priv, unsigned int off,
+			       void *val, size_t count)
+{
+	struct m10bmc_log *ddata = priv;
+
+	return bmc_nvmem_read(ddata, PMCI_BOM_INFO_ADDR, off, val, count);
+}
+
+static struct nvmem_config bmc_event_log_nvmem_config = {
+	.name = "bmc_event_log",
+	.stride = 4,
+	.word_size = 1,
+	.size = PMCI_ERROR_LOG_SIZE,
+	.reg_read = bmc_event_log_nvmem_read,
+	.id = NVMEM_DEVID_AUTO,
+};
+
+static struct nvmem_config fpga_image_dir_nvmem_config = {
+	.name = "fpga_image_directory",
+	.stride = 4,
+	.word_size = 1,
+	.size = PMCI_FPGA_IMAGE_DIR_SIZE,
+	.reg_read = fpga_image_dir_nvmem_read,
+	.id = NVMEM_DEVID_AUTO,
+};
+
+static struct nvmem_config bom_info_nvmem_config = {
+	.name = "bom_info",
+	.stride = 4,
+	.word_size = 1,
+	.size = PMCI_BOM_INFO_SIZE,
+	.reg_read = bom_info_nvmem_read,
+	.id = NVMEM_DEVID_AUTO,
+};
+
 static int m10bmc_log_probe(struct platform_device *pdev)
 {
 	struct m10bmc_log *ddata;
+	struct nvmem_config nvconfig;
 
 	ddata = devm_kzalloc(&pdev->dev, sizeof(*ddata), GFP_KERNEL);
 	if (!ddata)
@@ -100,6 +175,30 @@ static int m10bmc_log_probe(struct platform_device *pdev)
 
 	m10bmc_log_time_sync(&ddata->dwork.work);
 
+	memcpy(&nvconfig, &bmc_event_log_nvmem_config, sizeof(bmc_event_log_nvmem_config));
+	nvconfig.dev = ddata->dev;
+	nvconfig.priv = ddata;
+
+	ddata->bmc_event_log_nvmem = devm_nvmem_register(ddata->dev, &nvconfig);
+	if (IS_ERR(ddata->bmc_event_log_nvmem))
+		return PTR_ERR(ddata->bmc_event_log_nvmem);
+
+	memcpy(&nvconfig, &fpga_image_dir_nvmem_config, sizeof(fpga_image_dir_nvmem_config));
+	nvconfig.dev = ddata->dev;
+	nvconfig.priv = ddata;
+
+	ddata->fpga_image_dir_nvmem = devm_nvmem_register(ddata->dev, &nvconfig);
+	if (IS_ERR(ddata->fpga_image_dir_nvmem))
+		return PTR_ERR(ddata->fpga_image_dir_nvmem);
+
+	memcpy(&nvconfig, &bom_info_nvmem_config, sizeof(bom_info_nvmem_config));
+	nvconfig.dev = ddata->dev;
+	nvconfig.priv = ddata;
+
+	ddata->bom_info_nvmem = devm_nvmem_register(ddata->dev, &nvconfig);
+	if (IS_ERR(ddata->bom_info_nvmem))
+		return PTR_ERR(ddata->bom_info_nvmem);
+
 	return 0;
 }
 
diff --git a/include/linux/mfd/intel-m10-bmc.h b/include/linux/mfd/intel-m10-bmc.h
index 1dccd0513c6b..d8fb8eb8f11b 100644
--- a/include/linux/mfd/intel-m10-bmc.h
+++ b/include/linux/mfd/intel-m10-bmc.h
@@ -226,6 +226,15 @@ enum m10bmc_type {
 #define PMCI_FPGA_RECONF_PAGE  GENMASK(22, 20)
 #define PMCI_FPGA_RP_LOAD      BIT(23)
 
+#define PMCI_ERROR_LOG_ADDR  0x7fb0000
+#define PMCI_ERROR_LOG_SIZE  0x40000
+
+#define PMCI_FPGA_IMAGE_DIR_ADDR  0x7ff6000
+#define PMCI_FPGA_IMAGE_DIR_SIZE  0x3000
+
+#define PMCI_BOM_INFO_ADDR  0x7ff0000
+#define PMCI_BOM_INFO_SIZE  0x2000
+
 /* Addresses for security related data in FLASH */
 #define PMCI_BMC_REH_ADDR 0x7ffc004
 #define PMCI_BMC_PROG_ADDR 0x7ffc000
-- 
2.39.0

